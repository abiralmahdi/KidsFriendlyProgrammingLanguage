
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE EQUALS IDENTIFIER LPAREN MINUS NUMBER PLUS RPAREN TIMESstatement : IDENTIFIER EQUALS expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : NUMBERexpression : IDENTIFIER'
    
_lr_action_items = {'IDENTIFIER':([0,3,7,8,9,10,],[2,4,4,4,4,4,]),'$end':([1,4,5,6,11,12,13,14,],[0,-7,-1,-6,-2,-3,-4,-5,]),'EQUALS':([2,],[3,]),'NUMBER':([3,7,8,9,10,],[6,6,6,6,6,]),'PLUS':([4,5,6,11,12,13,14,],[-7,7,-6,7,7,7,7,]),'MINUS':([4,5,6,11,12,13,14,],[-7,8,-6,8,8,8,8,]),'TIMES':([4,5,6,11,12,13,14,],[-7,9,-6,9,9,9,9,]),'DIVIDE':([4,5,6,11,12,13,14,],[-7,10,-6,10,10,10,10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([3,7,8,9,10,],[5,11,12,13,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> IDENTIFIER EQUALS expression','statement',3,'p_statement_assign','parser.py',6),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',10),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',11),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',12),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',13),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',17),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','parser.py',21),
]
