Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LPAREN
    RPAREN

Grammar

Rule 0     S' -> statement
Rule 1     statement -> IDENTIFIER EQUALS expression
Rule 2     expression -> expression PLUS expression
Rule 3     expression -> expression MINUS expression
Rule 4     expression -> expression TIMES expression
Rule 5     expression -> expression DIVIDE expression
Rule 6     expression -> NUMBER
Rule 7     expression -> IDENTIFIER

Terminals, with rules where they appear

DIVIDE               : 5
EQUALS               : 1
IDENTIFIER           : 1 7
LPAREN               : 
MINUS                : 3
NUMBER               : 6
PLUS                 : 2
RPAREN               : 
TIMES                : 4
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 2 3 3 4 4 5 5
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 2

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> IDENTIFIER . EQUALS expression

    EQUALS          shift and go to state 3


state 3

    (1) statement -> IDENTIFIER EQUALS . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . IDENTIFIER

    NUMBER          shift and go to state 6
    IDENTIFIER      shift and go to state 4

    expression                     shift and go to state 5

state 4

    (7) expression -> IDENTIFIER .

    PLUS            reduce using rule 7 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 7 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 7 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 7 (expression -> IDENTIFIER .)
    $end            reduce using rule 7 (expression -> IDENTIFIER .)


state 5

    (1) statement -> IDENTIFIER EQUALS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

    $end            reduce using rule 1 (statement -> IDENTIFIER EQUALS expression .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    TIMES           shift and go to state 9
    DIVIDE          shift and go to state 10


state 6

    (6) expression -> NUMBER .

    PLUS            reduce using rule 6 (expression -> NUMBER .)
    MINUS           reduce using rule 6 (expression -> NUMBER .)
    TIMES           reduce using rule 6 (expression -> NUMBER .)
    DIVIDE          reduce using rule 6 (expression -> NUMBER .)
    $end            reduce using rule 6 (expression -> NUMBER .)


state 7

    (2) expression -> expression PLUS . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . IDENTIFIER

    NUMBER          shift and go to state 6
    IDENTIFIER      shift and go to state 4

    expression                     shift and go to state 11

state 8

    (3) expression -> expression MINUS . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . IDENTIFIER

    NUMBER          shift and go to state 6
    IDENTIFIER      shift and go to state 4

    expression                     shift and go to state 12

state 9

    (4) expression -> expression TIMES . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . IDENTIFIER

    NUMBER          shift and go to state 6
    IDENTIFIER      shift and go to state 4

    expression                     shift and go to state 13

state 10

    (5) expression -> expression DIVIDE . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . IDENTIFIER

    NUMBER          shift and go to state 6
    IDENTIFIER      shift and go to state 4

    expression                     shift and go to state 14

state 11

    (2) expression -> expression PLUS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 2 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    TIMES           shift and go to state 9
    DIVIDE          shift and go to state 10

  ! PLUS            [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 2 (expression -> expression PLUS expression .) ]


state 12

    (3) expression -> expression MINUS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 3 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    TIMES           shift and go to state 9
    DIVIDE          shift and go to state 10

  ! PLUS            [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression MINUS expression .) ]


state 13

    (4) expression -> expression TIMES expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 4 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    TIMES           shift and go to state 9
    DIVIDE          shift and go to state 10

  ! PLUS            [ reduce using rule 4 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 4 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 4 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression TIMES expression .) ]


state 14

    (5) expression -> expression DIVIDE expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 5 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    TIMES           shift and go to state 9
    DIVIDE          shift and go to state 10

  ! PLUS            [ reduce using rule 5 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 5 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 5 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression DIVIDE expression .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 11 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 11 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 11 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 11 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 12 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 12 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 12 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 12 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 13 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 13 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 13 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 13 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 14 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 14 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 14 resolved as shift
